DEBUT();

# Read mesh
# ------------------

meshinit=LIRE_MAILLAGE( FORMAT='MED' );


# Reorient all normals so they are coherent
# ----------------------------------------

#meshinit=MODI_MAILLAGE(reuse=meshinit,
#                      INFO=1,
#                      MAILLAGE=meshinit,
#                      ORIE_NORM_COQUE=_F(GROUP_MA=('ShellElements',),));

# Add a 1D element in the master node
# ------------------------------------

mesh = CREA_MAILLAGE(MAILLAGE=meshinit,
                     CREA_POI1=_F(NOM_GROUP_MA='MNode',
                                  GROUP_NO='MNode',),);

# DKT modelisation and DIS_TR for Mnode
# ----------------------------------------

modl=AFFE_MODELE( MAILLAGE=mesh,
                 AFFE=(
                 _F( 
                        GROUP_MA = ('ShellElements','ForceEdges'),
                        PHENOMENE = 'MECANIQUE',
                        MODELISATION = 'DKT'
                  ),
                 _F( 
                        GROUP_MA = 'MNode',
                        PHENOMENE = 'MECANIQUE',
                        MODELISATION = 'DIS_TR'
                  ),)
);


# Material definition
# ----------------------

al2024t4=DEFI_MATERIAU(ELAS=_F( E = 73e6,NU = 0.33,) );

# Assignment of the material on the mesh
# ---------------------------------------

chmat=AFFE_MATERIAU(MAILLAGE=mesh, 
                    AFFE=_F( GROUP_MA = 'ShellElements',MATER = al2024t4)
);

# Section Assigment
# -------------------------------------
# Thickness to shell elements
# 0 stifness and mass to MNode

cara=AFFE_CARA_ELEM( MODELE=modl,
                     COQUE=(_F( 
                            GROUP_MA = 'ShellElements', 
                            EPAIS=0.002,
                            VECTEUR=(0.0,0.0,1.0)
                     )),
                     DISCRET=(_F(CARA='M_TR_D_N',
                                   GROUP_MA='MNode',
                                   VALE=(0,0,0,0,0,0,0,0,0,0,),),
                                _F(CARA='K_TR_D_N',
                                   GROUP_MA='MNode',
                                   VALE=(0,0,0,0,0,0,),),),
);
                                
# Boundary conditions
# -------------------------------------

# Rotations and longitudinal displacement
clim=AFFE_CHAR_MECA( MODELE=modl,
                    DDL_IMPO=(
                   _F( 
                            GROUP_NO = 'FixNodes', 
                            DZ = 0., 
                            DRX = 0.0, DRY = 0, DRZ = 0 
                    ),
                   #_F( 
                   #         GROUP_NO = 'MNode', 
                   #         DX = 0, 
                   #         DY = 0, 
                   #         DZ = 0, 
                   #         DRX = 0, 
                   #         DRY = 0, 
                   #         #DRZ = 0, 
                   #),
                )
);
# Allow only radial displacements
rdisp=AFFE_CHAR_MECA( MODELE=modl,
                        ARETE_IMPO=_F(GROUP_MA='FixEdges', DTAN = 0.0));



# Loads definition
# -------------------------

charg=AFFE_CHAR_MECA( MODELE=modl,
          FORCE_COQUE=_F( GROUP_MA = ('PressureLoad'),  PRES=50),);


from math import pi
FX=200; FY=-250; FZ=-300;
MX=500; MY=-500; MZ=-600;
perimeter = 2*pi*1.9
fx = FX/(perimeter)
fy = FY/(perimeter)
fz = FZ/(perimeter)
mx = MX/(perimeter)
my = MY/(perimeter)
mz = MZ/(perimeter)
#pload=AFFE_CHAR_MECA( MODELE=modl,
#            FORCE_ARETE=_F( GROUP_MA = ('ForceEdges'), 
#                        FX = fx, FY = fy, FZ = fz,
#                        MX = mx, MY = my, MZ = mz
#            )
#);

pload=AFFE_CHAR_MECA( MODELE=modl,
                        LIAISON_SOLIDE=_F(GROUP_NO = ('ForceNodes', 'MNode')),
                        #LIAISON_RBE3=( _F(
                        #      GROUP_NO_MAIT='MNode',
                        #      DDL_MAIT=('DX','DY','DZ','DRX','DRY','DRZ'),
                        #      #DDL_MAIT=('DZ','DRZ'),
                        #      GROUP_NO_ESCL='ForceNodes',
                        #      DDL_ESCL=('DX-DY-DZ-DRX-DRY-DRZ'),
                        #      COEF_ESCL=(1.,)
                        #)),
                        #LIAISON_ELEM=_F(GROUP_MA_1='ForceNodes',
                        #                GROUP_NO_2='MNode',
                        #                OPTION='2D_POU'),
                        #LIAISON_UNIF=_F(
                        #                GROUP_NO = ('ForceNodes', 'MNode'),
                        #                DDL=('DX','DY','DZ','DRX','DRY','DRZ')
                        #),
                        FORCE_NODALE=_F(GROUP_NO='MNode',
                                        FX=FX, FY=FY, FZ=FZ,
                                        MX=MX, MY=MY, MZ=MZ
                                        #MZ = -600
                        ),
);

# Resolution
# ----------

function = DEFI_FONCTION( NOM_PARA='INST', VALE = (0.0, 0.0, 1.0, 1.0));

listTime = DEFI_LIST_REEL( DEBUT= 0.0,
                        INTERVALLE = _F (
                            JUSQU_A = 1.0,
                            PAS = 0.05)
                    );

res1=STAT_NON_LINE(  
            MODELE=modl,     
            CHAM_MATER=chmat,
            CARA_ELEM=cara, 
            EXCIT=( 
                _F( CHARGE = clim),
                _F( CHARGE = rdisp),
                _F( CHARGE = charg, 
                    FONC_MULT = function),
                _F( CHARGE = pload,
                    FONC_MULT = function),
            ),
            COMPORTEMENT=_F(RELATION='ELAS',
                            DEFORMATION='GROT_GDEP'),
            INCREMENT = _F(LIST_INST = listTime),
            NEWTON = _F( MATRICE = 'TANGENTE',
                                 REAC_ITER = 1),
            CONVERGENCE = _F( RESI_GLOB_RELA = 0.0001,
                                      ITER_GLOB_MAXI = 30),
        
);

# Improve results
# ----------------
res1 = CALC_CHAMP(reuse=res1,
                    RESULTAT=res1,
                    CONTRAINTE=('SIGM_ELNO',),
                    CRITERES=('SIEQ_ELNO',)
);

sol_up = POST_CHAMP ( RESULTAT=res1,
                    EXTR_COQUE = _F(
                        NOM_CHAM = 'SIEQ_ELNO',
                        NUME_COUCHE = 1,
                        NIVE_COUCHE = 'SUP')
                );
sol_down = POST_CHAMP ( RESULTAT=res1,
                        EXTR_COQUE = _F(
                            NOM_CHAM = 'SIEQ_ELNO',
                            NUME_COUCHE = 1,
                            NIVE_COUCHE = 'INF')
                );
                        


# Convert the displacements to cylindrical coordinates

#res2 = MODI_REPERE( RESULTAT=res1,
#                    MODI_CHAM=_F(
#                                 NOM_CHAM='DEPL',
#                                 NOM_CMP=('DX','DY','DZ'),
#                                 TYPE_CHAM='VECT_3D',
#                    ),
#                    REPERE='CYLINDRIQUE',
#                    AFFE = _F( ORIGINE = (0.0, 0.0, 0.0),
#                               AXE_Z =   (0.0, 0.0, 1.0)),
#);

# Print results
# -------------

IMPR_RESU(FORMAT='MED',
          UNITE = 80,
          RESU=(
                _F(RESULTAT=res1,
                  NOM_CHAM=('DEPL', 
                            'SIEQ_ELNO', 
                            'SIGM_ELNO' 
                  ),),
                _F(RESULTAT=sol_up,
                  NOM_CHAM=( 'SIEQ_ELNO',)
                  ),
                _F(RESULTAT=sol_down,
                  NOM_CHAM=( 'SIEQ_ELNO', )
                  ),
            )
);

# Results in cylindrical coordinates

#IMPR_RESU(FORMAT='MED',
#          UNITE = 81,
#          RESU=_F(RESULTAT=res2,
#                  NOM_CHAM=('DEPL', ),));

FIN();
