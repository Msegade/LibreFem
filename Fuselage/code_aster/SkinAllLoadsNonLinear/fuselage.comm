DEBUT();

# Read mesh
# ------------------

meshinit=LIRE_MAILLAGE( FORMAT='MED' );
#
# Add one more element for coque_3d
# ---------------------------------
#mesh9=CREA_MAILLAGE(
#                MAILLAGE=meshinit,
#                 MODI_MAILLE=_F(GROUP_MA='ShellElements',
#                 OPTION='QUAD8_9',
#                              ),);

# Add a 1D element in the master node
# ------------------------------------

mesh = CREA_MAILLAGE(
                     MAILLAGE=meshinit,
                     #MAILLAGE=mesh9,
                     CREA_POI1=_F(NOM_GROUP_MA='MNode',
                                  GROUP_NO='MNode',),);

# DKT modelisation and DIS_TR for Mnode
# ----------------------------------------

modl=AFFE_MODELE( MAILLAGE=mesh,
                 AFFE=(
                 _F( 
                        GROUP_MA = ('ShellElements','ForceEdges'),
                        PHENOMENE = 'MECANIQUE',
                        MODELISATION = 'DKT'
                        #MODELISATION = 'DKTG'
                        #MODELISATION = 'COQUE_3D'
                  ),
                 _F( 
                        GROUP_MA = 'MNode',
                        PHENOMENE = 'MECANIQUE',
                        MODELISATION = 'DIS_TR'
                  ),)
);


# Material definition
# ----------------------

al2024t4=DEFI_MATERIAU(ELAS=_F( E = 73e6,NU = 0.33,) );

# Assignment of the material on the mesh
# ---------------------------------------

chmat=AFFE_MATERIAU(MAILLAGE=mesh, 
                    AFFE=_F( GROUP_MA = 'ShellElements',MATER = al2024t4)
);

# Section Assigment
# -------------------------------------
# Thickness to shell elements
# 0 stifness and mass to MNode

cara=AFFE_CARA_ELEM( MODELE=modl,
                     COQUE=(_F( 
                            GROUP_MA = 'ShellElements', 
                            EPAIS=0.002,
                            VECTEUR=(0.0,0.0,1.0)
                     )),
                     DISCRET=(_F(CARA='M_TR_D_N',
                                   GROUP_MA='MNode',
                                   VALE=(0,0,0,0,0,0,0,0,0,0,),),
                                _F(CARA='K_TR_D_N',
                                   GROUP_MA='MNode',
                                   VALE=(0,0,0,0,0,0,),),),
);
                                
# Boundary conditions
# -------------------------------------

# Rotations and longitudinal displacement
clim=AFFE_CHAR_MECA( MODELE=modl,
                    DDL_IMPO=(
                   _F( 
                            GROUP_NO = 'FixNodes', 
                            DZ = 0., 
                            DRX = 0.0, DRY = 0, DRZ = 0 
                    ),
                )
);
# Allow only radial displacements
rdisp=AFFE_CHAR_MECA( MODELE=modl,
                        ARETE_IMPO=_F(GROUP_MA='FixEdges', DTAN = 0.0));



# Loads definition
# -------------------------

charg=AFFE_CHAR_MECA( MODELE=modl,
          FORCE_COQUE=_F( GROUP_MA = ('PressureLoad'),  PRES=50),);


FX=200; FY=-250; FZ=-300;
MX=500; MY=-500; MZ=-600;

pload=AFFE_CHAR_MECA( MODELE=modl,
                        LIAISON_SOLIDE=_F(GROUP_NO = ('ForceNodes', 'MNode')),
                        FORCE_NODALE=_F(GROUP_NO='MNode',
                                        FX=FX, FY=FY, FZ=FZ,
                                        MX=MX, MY=MY, MZ=MZ
                        ),
);

# Resolution
# ----------

function = DEFI_FONCTION( NOM_PARA='INST', VALE = (0.0, 0.0, 1.0, 1.0));

listTime = DEFI_LIST_REEL( DEBUT= 0.0,
                            INTERVALLE = _F (
                            JUSQU_A = 1.0,
                            #PAS = 0.01
                            PAS = 0.1
                            #PAS = 0.25
                            )
                    );


listAuto=DEFI_LIST_INST(
                          DEFI_LIST=_F(LIST_INST=listTime,
                                       METHODE='AUTO',
                                       PAS_MINI=1.E-04),
                          ADAPTATION=_F(EVENEMENT='SEUIL',
                                        MODE_CALCUL_TPLUS='FIXE',
                                        PCENT_AUGM=100.0,
                                        NOM_PARA='NB_ITER_NEWTON',
                                        CRIT_COMP='LE',
                                        NB_INCR_SEUIL=2),
                          ECHEC=_F(
                                   ACTION='DECOUPE',
                                   SUBD_METHODE='MANUEL',
                                   EVENEMENT='DIVE_RESI',
                                   SUBD_PAS=2,
                                   ),
                          );
   
res1=STAT_NON_LINE(  
              MODELE=modl,     
              CHAM_MATER=chmat,
              CARA_ELEM=cara, 
              EXCIT=( 
                  _F( CHARGE = clim),
                  _F( CHARGE = rdisp),
                  _F( CHARGE = charg, 
                      FONC_MULT = function),
                  _F( CHARGE = pload,
                      FONC_MULT = function),
              ),
              COMPORTEMENT=_F(
                              GROUP_MA='ShellElements',
                              RELATION='ELAS',
                              DEFORMATION='PETIT_REAC',
                              #DEFORMATION='GROT_GDEP',
              ),
              INCREMENT = _F(
                             LIST_INST = listAuto
              ),
              NEWTON = _F( 
                          #MATRICE = 'ELASTIQUE',
                          MATRICE = 'TANGENTE',
                          REAC_ITER = 1 
              ),
              CONVERGENCE = _F( 
                                RESI_GLOB_RELA = 1e-6,
                                ITER_GLOB_MAXI = 30
              ),
        
);

# Improve results
# ----------------
res1 = CALC_CHAMP(reuse=res1,
                    RESULTAT=res1,
                    CONTRAINTE=('SIGM_ELNO',),
                    CRITERES=('SIEQ_ELNO',)
);

sol_up = POST_CHAMP ( RESULTAT=res1,
                    EXTR_COQUE = _F(
                        NOM_CHAM = 'SIEQ_ELNO',
                        NUME_COUCHE = 1,
                        NIVE_COUCHE = 'SUP')
                );
sol_down = POST_CHAMP ( RESULTAT=res1,
                        EXTR_COQUE = _F(
                            NOM_CHAM = 'SIEQ_ELNO',
                            NUME_COUCHE = 1,
                            NIVE_COUCHE = 'INF')
                );
                        


# Print results
# -------------

IMPR_RESU(FORMAT='MED',
          UNITE = 80,
          RESU=(
                _F(RESULTAT=res1,
                  NOM_CHAM=('DEPL', 
                            'SIEQ_ELNO', 
                            'SIGM_ELNO' 
                  ),),
                _F(RESULTAT=sol_up,
                  NOM_CHAM=( 'SIEQ_ELNO',)
                  ),
                _F(RESULTAT=sol_down,
                  NOM_CHAM=( 'SIEQ_ELNO', )
                  ),
            )
);


FIN();
