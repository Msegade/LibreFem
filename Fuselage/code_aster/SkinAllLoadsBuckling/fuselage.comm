DEBUT();

# Read mesh
# ------------------

meshinit=LIRE_MAILLAGE( FORMAT='MED',)


# Add a Point element in the master node
# ------------------------------------

mesh = CREA_MAILLAGE(MAILLAGE=meshinit,
                     CREA_POI1=_F(NOM_GROUP_MA='MNode',
                                  GROUP_NO='MNode',),);

# Check the mesh
# ---------------
IMPR_RESU(FORMAT='MED',
        UNITE=71,
        RESU=_F(MAILLAGE=mesh)
);

# DKT modelisation and DIS_TR for Mnode
# ----------------------------------------

modl=AFFE_MODELE( MAILLAGE=mesh,
                 AFFE=(
                 _F( 
                        GROUP_MA = ('ShellElements','ForceEdges'),
                        PHENOMENE = 'MECANIQUE',
                        MODELISATION = 'DKT'
                  ),
                 _F( 
                        GROUP_MA = 'MNode',
                        PHENOMENE = 'MECANIQUE',
                        MODELISATION = 'DIS_TR'
                  ),)
);


# Material definition
# ----------------------

al2024t4=DEFI_MATERIAU(ELAS=_F( E = 73e6,NU = 0.33,) );

# Assignment of the material on the mesh
# ---------------------------------------

chmat=AFFE_MATERIAU(MAILLAGE=mesh, 
                    AFFE=_F( GROUP_MA = 'ShellElements',MATER = al2024t4)
);

# Section Assigment
# -------------------------------------
# Thickness to shell elements
# 0 stifness and mass to MNode

cara=AFFE_CARA_ELEM( MODELE=modl,
                     COQUE=(_F( 
                            GROUP_MA = 'ShellElements', 
                            EPAIS=0.002,
                            VECTEUR=(0.0,0.0,1.0),
                            A_CIS=9000,
                     )),
                     DISCRET=(_F(CARA='M_TR_D_N',
                                   GROUP_MA='MNode',
                                   VALE=(0,0,0,0,0,0,0,0,0,0,),),
                                _F(CARA='K_TR_D_N',
                                   GROUP_MA='MNode',
                                   VALE=(0,0,0,0,0,0,),),),
                                   #VALE=(0.1,0.1,0.1,0.1,0.1,0.1,),),),
);
                                
# Boundary conditions
# -------------------------------------

# Rotations and longitudinal displacement
clim=AFFE_CHAR_MECA( MODELE=modl,
                    DDL_IMPO=(
                   _F( 
                            GROUP_NO = 'FixNodes',
                            DZ = 0., 
                            DRX = 0.0, DRY = 0, DRZ = 0 
                    ),),
                    LIAISON_SOLIDE=_F(GROUP_NO = ('ForceNodes', 'MNode')),
);
# Allow only radial displacements
rdisp=AFFE_CHAR_MECA( MODELE=modl,
                        ARETE_IMPO=_F(GROUP_MA='FixEdges', DTAN = 0.0));



# Loads definition
# -------------------------

charg=AFFE_CHAR_MECA( MODELE=modl,
          FORCE_COQUE=_F( GROUP_MA = ('PressureLoad'),  PRES=50),);


FX=200; FY=-250; FZ=-300;
MX=500; MY=-500; MZ=-600;

pload=AFFE_CHAR_MECA( MODELE=modl,
                        #LIAISON_SOLIDE=_F(GROUP_NO = ('ForceNodes', 'MNode')),
                        FORCE_NODALE=_F(GROUP_NO='MNode',
                                        FX=FX, FY=FY, FZ=FZ,
                                        MX=MX, MY=MY, MZ=MZ
                        ),
);

# Resolution
# ----------

res1=MECA_STATIQUE(  MODELE=modl,     
                     CHAM_MATER=chmat,
                     CARA_ELEM=cara, 
                     EXCIT=( 
                                    _F( CHARGE = charg),
                                    _F( CHARGE = pload),
                                    _F( CHARGE = clim),
                                    _F( CHARGE = rdisp)),
                    OPTION = 'SIEF_ELGA',
);


# Stress field to calculate the geometric stiffnes matrix
# -------------------------------------------------------

stressg = CREA_CHAMP (
                      RESULTAT = res1,   
                      OPERATION = 'EXTR',
                      TYPE_CHAM = 'ELGA_SIEF_R', 
                      NOM_CHAM = 'SIEF_ELGA',
                      TYPE_MAXI = 'MINI',
                      TYPE_RESU = 'VALE'
                      )

# Assembly 
# ---------------------------

ASSEMBLAGE ( MODELE=modl,
             CHAM_MATER=chmat,
             CARA_ELEM=cara,
             CHARGE = (clim,rdisp,charg),
             NUME_DDL = CO('NU'),
             MATR_ASSE=(
              _F( MATRICE= CO('masrim'), OPTION= 'RIGI_MECA'),
              _F( MATRICE= CO('masrig'), OPTION= 'RIGI_GEOM',SIEF_ELGA=stressg),),);



# Calculate the modes
# -------------------

modp1 = CALC_MODES (MATR_RIGI_GEOM = masrig,
                    VERI_MODE = _F(SEUIL=5.E-5),
                    OPTION = 'PLUS_PETITE',
                    MATR_RIGI = masrim,
                    SOLVEUR_MODAL  = 
                        _F( 
                            METHODE='SORENSEN'
                    ),
                    TYPE_RESU = 'MODE_FLAMB',
                    CALC_CHAR_CRIT = _F( 
                            NMAX_CHAR_CRIT = 6,
                    ),
)

# Normalize the modes 
# ------------------

modp1 = NORM_MODE (reuse =modp1,    
                   MODE = modp1,
                   NORME = 'TRAN');

# Result
IMPR_RESU(FORMAT='MED',
          UNITE = 80,
          RESU=_F(RESULTAT=modp1,)
    )
                  


FIN();
